# -*- coding: utf-8 -*-
"""Number Plate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DKiEPpKNFM0Ix8Zb-j3WNw9zbAuB4tmf
"""

import cv2

img = cv2.imread("car.jpg") #file on desktop

type(img)

print(img)

from google.colab.patches import cv2_imshow

cv2_imshow(img)

img = cv2.resize(img, (620,480) )
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) #convert to grey scale

cv2_imshow(gray)

gray = cv2.bilateralFilter(gray, 50, 17, 17)

cv2_imshow(gray)

edged = cv2.Canny(gray,100,200)

cv2_imshow(edged)

import imutils

cnts = cv2.findContours(edged.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
cnts = imutils.grab_contours(cnts)
cnts = sorted(cnts, key = cv2.contourArea, reverse = True)[:10]
screenCnt = None

print(cnts[0])

# loop over our contours
for c in cnts:
                # approximate the contour
                peri = cv2.arcLength(c, True)
                approx = cv2.approxPolyDP(c, 0.018 * peri, True)
                # if our approximated contour has four points, then
                # we can assume that we have found our screen
                if len(approx) == 4:
                      screenCnt = approx
                      break

import numpy as np

# Masking the part other than the number plate
mask = np.zeros(gray.shape,np.uint8)
new_image = cv2.drawContours(mask,[screenCnt],0,255,-1,)
new_image = cv2.bitwise_and(img,img,mask=mask)

cv2_imshow(new_image)

# Now crop
(x, y) = np.where(mask == 255)
(topx, topy) = (np.min(x), np.min(y))
(bottomx, bottomy) = (np.max(x), np.max(y))
Cropped = gray[topx:bottomx+1, topy:bottomy+1]

cv2_imshow(Cropped)

type(Cropped)

import requests
import numpy as np

url_api = "https://api.ocr.space/parse/image"
import io

_ , compimg = cv2.imencode(".jpg",img,[1,90])
file_bytes = io.BytesIO(compimg)

cv2.imwrite('number_plate.jpg',Cropped)

from IPython.display import Image
Image('number_plate.jpg')

result = requests.post(url_api,files={"number_plate.jpg" : file_bytes},data={"apikey":"e647b4847d88957"})
print(result)

import json
result = result.content.decode()
result = json.loads(result)

print(result)

number = result.get('ParsedResults')[0].get('ParsedText')

print(number)

number = number.partition('\n')[0]

print(number)

import requests

!pip install mechanicalSoup

import mechanicalsoup

br = mechanicalsoup.StatefulBrowser()
br.open("http://www.rtovehicleinformation.com/")

form = br.select_form('#rto_adres_form1')

form.set("vehicle_shrt_name",number)

form.choose_submit(None)

response = br.submit_selected()

response.text

from bs4 import BeautifulSoup

soup = BeautifulSoup(response.text,'html.parser')
tr = soup.find_all('tr')

tr[2].find_all('td')

[(tr[i].find_all('td')[0].get_text()+" : "+tr[i].find_all('td')[1].get_text())for i in range(0,5)]

